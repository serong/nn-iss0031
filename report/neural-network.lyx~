#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass report
\begin_preamble

                                                     
% Code color ------
\usepackage{color}
 
\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}
\end_preamble
\use_default_options true
\begin_modules
theorems-ams
theorems-chap
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 11
\spacing other 1.3
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 2
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 30mm
\topmargin 30mm
\rightmargin 30mm
\bottommargin 30mm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\listings_params "backgroundcolor={\color{backcolour}},basicstyle={\footnotesize},breakatwhitespace=false,breaklines=true,captionpos=b,commentstyle={\color{codegreen}},keepspaces=true,keywordstyle={\color{magenta}},numbers=left,numbersep=5pt,numberstyle={\tiny\color{codegray}},showspaces=false,showstringspaces=false,showtabs=false,stringstyle={\color{codepurple}},tabsize=2"
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\noindent
\align left
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
the image file universitylogo.png must be placed in the same folder as this
 file
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\series bold
\size larger
TALLINN UNIVERSITY OF TECHNOLOGY
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\size largest
Faculty of Information Technology
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\size larger
Department of Computer Control
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\size large
Chair of Automatic Control and Systems Analysis
\end_layout

\begin_layout Standard
\begin_inset VSpace 1.5in*
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\series bold
\size large
ISS0031 MODELLING AND IDENTIFICATION
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center

\size large
Digit Recognition Using Neural Network Implemented in Python 
\end_layout

\begin_layout Standard
\paragraph_spacing single
\align center
Serkan Ongan 156395IASM
\end_layout

\begin_layout Standard
\begin_inset VSpace 1.2in
\end_inset


\end_layout

\begin_layout Standard
\paragraph_spacing single
\noindent
\align right

\size large
Supervisor Aleksei TEPLJAKOV 
\end_layout

\begin_layout Standard
\begin_inset VSpace 3.1in
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
Tallinn 2016 
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
end{titlepage}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{roman} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList figure

\end_inset


\end_layout

\begin_layout Standard
\begin_inset FloatList table

\end_inset


\end_layout

\begin_layout Chapter*
Abstract
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Abstract}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
This project takes a brief look into neural network as modelling tools,
 as well as their implementation in Python programming language.
 Therefore it includes both theoretical and practical information in those
 areas.
 
\end_layout

\begin_layout Standard
// Libraries?
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Chapter
Introduction
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pagenumbering{arabic} 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
// Some things about why neural networks are important.
 Teaching tools, data complexity and vast amount of data.
 
\end_layout

\begin_layout Standard
// And the need to use more open sourced alternative to make the teaching
 and learning more ??? as well as taking a deeper look into the subject
 beyond using ready made function.
\end_layout

\begin_layout Section
Aim of the project
\end_layout

\begin_layout Standard
// Aim of the project and so on.
\end_layout

\begin_layout Section
Approach
\end_layout

\begin_layout Standard
// Deeper look into NN and getting familiar in 
\end_layout

\begin_layout Section
Choices
\end_layout

\begin_layout Standard
// Library choice which will be discussed more thoroughly in the later chapters.
\end_layout

\begin_layout Chapter
Neural Networks
\end_layout

\begin_layout Standard
In this chapter, we take a brief technical look at neural networks in order
 to lay the foundations of the actual Python implementation of the project.
\end_layout

\begin_layout Section
Biological Model
\end_layout

\begin_layout Section
Basic Theory
\end_layout

\begin_layout Chapter
Python
\end_layout

\begin_layout Standard
This chapter includes information about certain Python libraries that offer
 tools to implement neural networks, and the reasoning behind my choices
 regarding the implementation.
 It concludes with a section about the comparison of using computer vision
 solution instead of neural networks.
\end_layout

\begin_layout Section
Language and Libraries
\end_layout

\begin_layout Standard
Python is a high level scripting language that supports several programming
 paradigms, including procedural and object-oriented, as well as a partial
 support for functional programming (although not officially supported or
 encouraged).
 This makes it a very flexible tool to use in different application areas.
\end_layout

\begin_layout Standard
Another advantage of Python is that it has a clear and almost pseudo-code
 like syntax, making it easier to read and code.
 Below can be seen some examples of the syntax.
 Also appended to the file in Appendix 1 (page 
\begin_inset CommandInset ref
LatexCommand pageref
reference "chap:Appendix-1:-Code"

\end_inset

) are all the codes used in the implementation.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout

Python programming language.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

# function definition ####################################################
\end_layout

\begin_layout Plain Layout

def function_name(args):
\end_layout

\begin_layout Plain Layout

	""" Function documentation.
\end_layout

\begin_layout Plain Layout

	"""
\end_layout

\begin_layout Plain Layout

	return value
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# List comprehensions: ###################################################
\end_layout

\begin_layout Plain Layout

# a fast and convenient way to create lists.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

[x for x in range(1,10)]
\end_layout

\begin_layout Plain Layout

#[1, 2, 3, 4, 5, 6, 7, 8, 9] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

[x*x for x in range(1,10)] 
\end_layout

\begin_layout Plain Layout

# [1, 4, 9, 16, 25, 36, 49, 64, 81] 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Class definition.
 ######################################################
\end_layout

\begin_layout Plain Layout

class NeuralNetwork(object):     
\end_layout

\begin_layout Plain Layout

	bias_filename = "biases.npy"     
\end_layout

\begin_layout Plain Layout

	weights_filename = "weights.npy"
\end_layout

\begin_layout Plain Layout

    
\end_layout

\begin_layout Plain Layout

	def __init__(self, layers):         
\end_layout

\begin_layout Plain Layout

	""" Initialization.
 """
\end_layout

\begin_layout Plain Layout

		self.number_of_layers = len(layers)
\end_layout

\begin_layout Plain Layout

		self.layers = layers
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

	def save_state():
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Being popular and open-sourced, the language has plenty of libraries (roughly
 90000 libraries)
\begin_inset CommandInset citation
LatexCommand cite
key "ref:pypi"

\end_inset

 and it is a widely used tool in scientific programming area.
\end_layout

\begin_layout Standard
During the research and implementation, I have looked into following libraries.
\end_layout

\begin_layout Subsection*
NumPy
\end_layout

\begin_layout Standard
NumPy is one of the fundamental scientific packages in Python.
 
\begin_inset CommandInset citation
LatexCommand cite
key "ref:numpy"

\end_inset

It offers powerful N-dimensional objects and tools for integrating with
 C/C++ and Fortran code, which make it possible to solve performance issues
 using lower level languages that are more performant.
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout

Very brief look into NumPy
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

# very brief look into numpy.
\end_layout

\begin_layout Plain Layout

import numpy as np
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# creating a vector of 4 elements.
\end_layout

\begin_layout Plain Layout

vector_4 = np.random.randn(4)
\end_layout

\begin_layout Plain Layout

# array([ 0.00695554, -0.28457662,  2.36434078, -0.05432569]) 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# reshaping into a 2x2 matrix.
\end_layout

\begin_layout Plain Layout

vector_2x2 = vector_4.reshape(2,2)
\end_layout

\begin_layout Plain Layout

# array([[ 0.00695554, -0.28457662],        
\end_layout

\begin_layout Plain Layout

#        [ 2.36434078, -0.05432569]]) 
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
When compared to 
\series bold
Matlab
\series default
, there are fundamental differences.
\end_layout

\begin_layout Enumerate
Basic type in NumPy are multidimensional arrays, and operations on these
 arrays are 
\bar under
element-wise
\bar default
.
 If matrix-like operations are needed, a sub-type called 
\series bold
matrix
\series default
 type should be used.
\end_layout

\begin_layout Enumerate
Python arrays are 0-indexed, so the first element of an array A can be reached
 by A[0].
\end_layout

\begin_layout Enumerate
Better support for GUI applications via Python's general purpose programming
 approach.
\end_layout

\begin_layout Enumerate
In contrast to Matlab, arrays have pass-by-reference semantic.
\end_layout

\begin_layout Standard
It should also be noted that official advice of the library is to use 
\series bold
arrays
\series default
 instead of the 
\series bold
matrix
\series default
 sub-type.
 While matrices behave more-or-less like Matlab matrices, they have disadvantage
s like having maximum 2 dimensions.
 More information about NumPy equivalents of Matlab operations can be found
 at the documentation page of the library.
 
\begin_inset CommandInset citation
LatexCommand cite
key "ref:numpyDOC"

\end_inset


\end_layout

\begin_layout Subsection*
Matplotlib
\end_layout

\begin_layout Standard
Matplotlib is an open-source 2-D plotting library that is widely used by
 Python applications.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
A sample graph generated by Matplotlib
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/matplot_log.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
TensorFlow
\end_layout

\begin_layout Subsection*
PyBrain
\end_layout

\begin_layout Standard
Theano
\end_layout

\begin_layout Standard
ScikitLearn
\end_layout

\begin_layout Standard
Keras
\end_layout

\begin_layout Subsection*
Libraries with Python Bindings
\end_layout

\begin_layout Standard
Caffee, Theano
\end_layout

\begin_layout Section
Computer Vision Alternative (OpenCV)
\end_layout

\begin_layout Chapter
Implementation
\end_layout

\begin_layout Section
Data
\end_layout

\begin_layout Standard
The data used in the project was acquired at the Modified NIST database
 
\begin_inset CommandInset citation
LatexCommand cite
key "ref:mnist"

\end_inset

, which is a subset of a larger study done at the National Institute of
 Standards and Technology of United States of America.
\end_layout

\begin_layout Standard
It is preprocessed and formatted, therefore offering a good learning tool.
\end_layout

\begin_layout Subsection*
Data preparation and format
\end_layout

\begin_layout Standard
Each digit image was center in 28x28 pixel format and later transformed
 into a vector.
 Each vector element represents a pixel in the image in the form of 
\series bold
blackness
\series default
 of the said pixel.
 Also each image was labeled in the form of vector with a size of 10.
\end_layout

\begin_layout Subsection*
Input
\end_layout

\begin_layout Standard
Each input to the neural network will be in the form a vector (784x1).
 A sample input if represented as a 28x28 matrix could look as follows:
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Number matrix representation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
\paragraph_spacing double
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="5">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
R/C
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
28
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
28
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.2
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.1
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
...
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
And if plotted according to each pixel's blackness value, such a number
 could look as follows:
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Number visual representation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename images/number_rep.png
	scale 50

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Output
\end_layout

\begin_layout Standard
Each number in the set is also labelled by a vector of (10x1) size.
 So, for example label for the above number would be:
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "language=Python"
inline false
status open

\begin_layout Plain Layout

\begin_inset Caption

\begin_layout Plain Layout

Vector for number 4 in Python script
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

# Vector for number 4
\end_layout

\begin_layout Plain Layout

number_4 = [0, 0, 0, 0, 1, 0, 0, 0, 0, 0]
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
Datasets
\end_layout

\begin_layout Standard
The dataset comes with a training set of 60000 examples and a test set of
 10000 examples.
 For the project training set was partioned into 50000 examples for training
 and 10000 examples for validation.
\end_layout

\begin_layout Standard
\begin_inset Float table
placement h
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Datasets
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset VSpace smallskip
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Dataset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Inputs
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\series bold
Labels
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
training dataset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
50000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
50000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
validation dataset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
testing dataset
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
The Neural Network 
\end_layout

\begin_layout Subsection
Layers
\end_layout

\begin_layout Subsection
Cost Function
\end_layout

\begin_layout Subsection
Optimization Method
\end_layout

\begin_layout Subsection
Training
\end_layout

\begin_layout Subsection
Performance
\end_layout

\begin_layout Chapter
Conclusion
\end_layout

\begin_layout Standard
Last words.
\end_layout

\begin_layout Chapter*
Appendix 1: Code
\begin_inset CommandInset label
LatexCommand label
name "chap:Appendix-1:-Code"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Appendix 1: Lyx}
\end_layout

\end_inset

 
\end_layout

\begin_layout Standard
Here can be found the code used during the practical implementation.
 An updated copy of the code can also be found at the following Github repositor
y, which includes this report as well as the datasets and Python scripts
 used.
\end_layout

\begin_layout Standard
/// Github linkç
\end_layout

\begin_layout Chapter*

\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ref:mnist"

\end_inset

LeCun, Y.
 Mnist database of handwritten digits, http://yann.lecun.com/exdb/mnist/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ref:pypi"

\end_inset

PyPi, Python Library, https://pypi.python.org/pypi
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ref:numpy"

\end_inset

Numpy, http://www.numpy.org/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ref:numpyDOC"

\end_inset

Numpy documentation, https://docs.scipy.org/doc/numpy-dev/user/numpy-for-matlab-us
ers.html
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "ref:matplotlib"

\end_inset

Matplotlib, http://matplotlib.org/
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "bib:CD"

\end_inset

 Cvitanović, P., Davidchack, R.
 L.
 and Siminos, E., On the state space geometry of the Kuramoto-Sivashinsky
 flow in a periodic domain, 
\emph on
SIAM J.
 Appl.
 Dyn.
 Syst.

\emph default
 
\series bold
9
\series default
 (2010), 1–-33.
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
addcontentsline{toc}{chapter}{Bibliography}
\end_layout

\end_inset

 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "bib:Gauss"

\end_inset

 Gauss, C.F., 
\emph on
Disquisitiones Arithmeticae
\emph default
, Fleischer, Leipzig, 1801.
 
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "bib:GSS"

\end_inset

 Green, E.
\begin_inset space \space{}
\end_inset

L., Schroll, S.
 and Snashall, N., Group actions and coverings of Brauer graph algebras,
 
\shape italic
Glasgow Math.
 J.

\shape default
 
\series bold
56
\series default
 (2014), 439--464.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "bib:Hilbert1"

\end_inset

 Hilbert, D., Über ternäre definite Formen, 
\emph on
Acta Math.

\emph default
 
\series bold
17
\series default
 (1893), 169--197.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "bib:McCN"

\end_inset

 McCullagh, P.
 and Nelder, J.
 A., 
\shape italic
Generalized linear models, Second edition
\shape default
, Monographs on Statistics and Applied Probability, Chapman & Hall, London,
 1989.
\end_layout

\end_body
\end_document
